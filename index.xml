<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tips</title>
    <link>https://jiadingyi.github.io/</link>
    <description>Recent content on Tips</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Aug 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://jiadingyi.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Project 1</title>
      <link>https://jiadingyi.github.io/project/project1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jiadingyi.github.io/project/project1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Project 2</title>
      <link>https://jiadingyi.github.io/project/project2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jiadingyi.github.io/project/project2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Project 3</title>
      <link>https://jiadingyi.github.io/project/project3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jiadingyi.github.io/project/project3/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Project 4</title>
      <link>https://jiadingyi.github.io/project/project4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://jiadingyi.github.io/project/project4/</guid>
      <description></description>
    </item>
    
    <item>
      <title>剖析成员变量、实例变量、属性的关系</title>
      <link>https://jiadingyi.github.io/post/%E5%89%96%E6%9E%90%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E5%AE%9E%E4%BE%8B%E5%8F%98%E9%87%8F%E5%B1%9E%E6%80%A7%E7%9A%84%E5%85%B3%E7%B3%BB/</link>
      <pubDate>Thu, 11 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://jiadingyi.github.io/post/%E5%89%96%E6%9E%90%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F%E5%AE%9E%E4%BE%8B%E5%8F%98%E9%87%8F%E5%B1%9E%E6%80%A7%E7%9A%84%E5%85%B3%E7%B3%BB/</guid>
      <description>在 iOS5 更新之后苹果建议以如下的方式来声明变量:
@interface MainViewController : UIViewController @property (nonatomic,strong) UIView *snakeView; @end  这也是大多数新手 iOS 程序员最熟悉的方式.但是在阅读许多老手程序员写的代码的时候会疑惑如下这种方式的写法:
@implementation MainViewController{ UIView *snakeView; } @synthesize snakeView;  下面我将解释一下各种写法的来历.
Class 中的属性 property 在最初的时候我们必须同时为输出口声明属性和底层实例变量,例如:
@interface MainViewController : UIViewController{ UIView *snakeView; } @property (nonatomic,strong) UIView *snakeView;  后来苹果将默认编译器从 GCC 转换为 LLVM(low level virtual machine),从此不再需要为属性声明实例变量了.如果 LLVM 发现一个没有匹配实例变量的属性,他将自动创建一个与属性匹配的以下划线为开头的实例变量.也就是我们文章开头所有人都熟悉的写法. 例:
@interface MainViewController : UIViewController @property (nonatomic,strong) UIView *snakeView; @end  在 MainViewController.m 文件中,编译器会自动生成一个实例变量 _snakeView.那么在 .m 文件中我们就可以直接使用 _snakeView 实例变量,或者通过属性 self.</description>
    </item>
    
  </channel>
</rss>